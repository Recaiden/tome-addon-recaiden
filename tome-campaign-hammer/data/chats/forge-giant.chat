{
    "3": {
        "id": 3,
        "name": "attr-get",
        "data": {
            "not": false,
            "who": "player",
            "attr": "money",
            "value": "2000",
            "test": ">="
        },
        "class": "attr-get",
        "html": "attr-get",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "34",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "8",
                        "output": "input_1"
                    }
                ]
            }
        },
        "pos_x": 1757,
        "pos_y": -106.88888888888889
    },
    "5": {
        "id": 5,
        "name": "chat",
        "data": {
            "chatid": "welcome",
            "chat": "The forge-giant is hard at work forging weapons and gear for the armies of the fearscape.",
            "answer1": "Requesition equipment.",
            "answer2": "Leave it alone."
        },
        "class": "chat",
        "html": "chat2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "36",
                        "output": "input_1"
                    }
                ]
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 383.42857142857144,
        "pos_y": -62.42857142857143
    },
    "6": {
        "id": 6,
        "name": "quest-cond",
        "data": {
            "not": false,
            "quest": "campaign-hammer+demon-caravan",
            "status": "DONE",
            "sub": ""
        },
        "class": "quest-cond",
        "html": "quest-cond",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "36",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "34",
                        "output": "input_1"
                    }
                ]
            }
        },
        "pos_x": 1307.5,
        "pos_y": -115.5
    },
    "8": {
        "id": 8,
        "name": "chat",
        "data": {
            "chatid": "chat3",
            "chat": "You've proven yourself useful and productive enough to requisition custom-made gear from the forge giants.  Each piece will cost 2000 gold and produce an artifact with one of its egos chosen by you.",
            "answer1": "Accept",
            "answer2": "No thanks"
        },
        "class": "chat",
        "html": "chat2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "3",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "29",
                        "output": "input_1"
                    }
                ]
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 1981.111111111111,
        "pos_y": -167.88888888888889
    },
    "12": {
        "id": 12,
        "name": "quest-cond",
        "data": {
            "not": true,
            "quest": "campaign-hammer+demon-caravan",
            "status": "DONE",
            "sub": ""
        },
        "class": "quest-cond",
        "html": "quest-cond",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "36",
                        "input": "output_2"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "15",
                        "output": "input_1"
                    }
                ]
            }
        },
        "pos_x": 1307.75,
        "pos_y": 118
    },
    "14": {
        "id": 14,
        "name": "chat",
        "data": {
            "chatid": "chat5",
            "chat": "You haven't contributed enough material to the war effort.\n(Requires 2000 gold).",
            "answer1": "Leave"
        },
        "class": "chat",
        "html": "chat1",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "35",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            }
        },
        "pos_x": 1649,
        "pos_y": 442.42857142857144
    },
    "15": {
        "id": 15,
        "name": "chat",
        "data": {
            "chatid": "chat6",
            "chat": "The forge giant has more important things to do than deal with you.\n(Complete more quests)",
            "answer1": "Leave"
        },
        "class": "chat",
        "html": "chat1",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "12",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            }
        },
        "pos_x": 1671.25,
        "pos_y": 151
    },
    "29": {
        "id": 29,
        "name": "entry-selector",
        "data": {
            "chatid": "build-list",
            "code": "chat_env.mainbases = {\n    armours = {\n      \"elven-silk robe\",\n      \"drakeskin leather armour\",\n      \"voratun mail armour\",\n      \"voratun plate armour\",\n      \"elven-silk cloak\",\n      \"drakeskin leather gloves\",\n      \"voratun gauntlets\",\n      \"elven-silk wizard hat\",\n      \"drakeskin leather cap\",\n      \"voratun helm\",\n      \"pair of drakeskin leather boots\",\n      \"pair of voratun boots\",\n      \"drakeskin leather belt\",\n      \"voratun shield\",\n    },\n    weapons = {\n      \"voratun battleaxe\",\n      \"voratun greatmaul\",\n      \"voratun greatsword\",\n      \"voratun waraxe\",\n      \"voratun mace\",\n      \"voratun longsword\",\n      \"voratun dagger\",\n      \"living mindstar\",\n      \"quiver of dragonbone arrows\",\n      \"dragonbone longbow\",\n      \"drakeskin leather sling\",\n      \"dragonbone staff\",\n      \"pouch of voratun shots\",\n    },\n    misc = {\n      \"voratun ring\",\n      \"voratun amulet\",\n      \"dwarven lantern\",\n      \"voratun pickaxe\",\n      {\"dragonbone wand\", _t\"dragonbone wand\"},\n      {\"dragonbone totem\", _t\"dragonbone totem\"},\n      {\"voratun torque\", _t\"voratun torque\"},\n    },\n  }\n\nreturn \"jump\", \"build-chat\"\n"
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "48",
                        "input": "output_1"
                    },
                    {
                        "node": "8",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 1914,
        "pos_y": -1886.5
    },
    "30": {
        "id": 30,
        "name": "chat",
        "data": {
            "chatid": "ending",
            "chat": "Test done",
            "answer1": "ok"
        },
        "class": "chat",
        "html": "chat1",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            }
        },
        "pos_x": 3168,
        "pos_y": -721.6666666666666
    },
    "31": {
        "id": 31,
        "name": "entry-selector",
        "data": {
            "chatid": "build-chat",
            "code": "chat_env.l = {{_t\"I've changed my mind.\", jump = \"welcome\"}}\nfor kind, bases in pairs(chat_env.mainbases) do\n  chat_env.l[#chat_env.l+1] = {_t(kind):capitalize(), action=function(npc, player)\n    local l = {{_t\"I've changed my mind.\", jump = \"welcome\"}}\n    newChat{ id=\"makereal\",\n      text = _t[[Which kind of item would you like ?]],\n      answers = l,\n    }\n    for i, name in ipairs(bases) do\n      local dname = nil\n      if type(name) == \"table\" then name, dname = name[1], name[2] end\n      local not_ps, force_themes\n      not_ps = game.state:attrPowers(player) -- make sure randart is compatible with player\n      if not_ps.arcane then chat_env.force_themes = {'antimagic'} end\n        \n      local o, ok\n      local tries = 100\n      repeat\n        o = game.zone:makeEntity(game.level, \"object\", {name=name, ignore_material_restriction=true, no_tome_drops=true, ego_filter={keep_egos=true, ego_chance=-1000}}, nil, true)\n        if o then ok = true end\n        if o and not game.state:checkPowers(player, o, nil, \"antimagic_only\") then\n          ok = false o = nil \n        end\n        tries = tries - 1\n      until ok or tries < 0\n      if o then\n        if not dname then dname = o:getName{force_id=true, do_color=true, no_count=true}\n        else dname = \"#B4B4B4#\"..o:getDisplayString()..dname..\"#LAST#\" end\n        l[#l+1] = {dname, action=function(npc, player)\n          chat_env.object_base = o\n          return \"ego-select\"\n        end}\n      end\n    end\n\n    return \"makereal\"\n    end}\nend\n\nreturn \"jump\", \"build-shell\""
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 2566,
        "pos_y": -253
    },
    "34": {
        "id": 34,
        "name": "attr-get",
        "data": {
            "not": false,
            "who": "player",
            "attr": "money",
            "value": "",
            "test": "?"
        },
        "class": "attr-get",
        "html": "attr-get",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "6",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "3",
                        "output": "input_1"
                    }
                ]
            }
        },
        "pos_x": 1535.111111111111,
        "pos_y": -192
    },
    "35": {
        "id": 35,
        "name": "lua-cond",
        "data": {
            "not": false,
            "code": "game.player.money and game.player.money < 2000"
        },
        "class": "lua-cond",
        "html": "lua-cond",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "36",
                        "input": "output_3"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "14",
                        "output": "input_1"
                    }
                ]
            }
        },
        "pos_x": 1308,
        "pos_y": 439.1111111111111
    },
    "36": {
        "id": 36,
        "name": "entry-selector",
        "data": {
            "chatid": "chat4",
            "code": ""
        },
        "class": "entry-selector",
        "html": "entry-selector3",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "5",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "6",
                        "output": "input_1"
                    }
                ]
            },
            "output_2": {
                "connections": [
                    {
                        "node": "12",
                        "output": "input_1"
                    }
                ]
            },
            "output_3": {
                "connections": [
                    {
                        "node": "35",
                        "output": "input_1"
                    }
                ]
            }
        },
        "pos_x": 1009,
        "pos_y": -34.42857142857143
    },
    "37": {
        "id": 37,
        "name": "entry-selector",
        "data": {
            "chatid": "build-shell",
            "code": "newChat{ id=\"make\",\n\ttext = _t[[Which category of item would you like?]],\n\tanswers = chat_env.l,\n}\nreturn \"jump\", \"make\""
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": [
                    {
                        "node": "39",
                        "input": "output_1"
                    }
                ]
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 3939.5,
        "pos_y": -620.5
    },
    "39": {
        "id": 39,
        "name": "chat",
        "data": {
            "chatid": "oups",
            "chat": "The requested item cannot be forged.",
            "answer1": "Try something else.",
            "answer2": "Leave"
        },
        "class": "chat",
        "html": "chat2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "37",
                        "output": "input_1"
                    }
                ]
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 3667,
        "pos_y": -651.5
    },
    "48": {
        "id": 48,
        "name": "entry-selector",
        "data": {
            "chatid": "build-naming",
            "code": ""
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": [
                    {
                        "node": "29",
                        "output": "input_1"
                    }
                ]
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 1284.5,
        "pos_y": -964
    },
    "52": {
        "id": 52,
        "name": "entry-selector",
        "data": {
            "chatid": "pre-naming",
            "code": "world:gainAchievement(\"HAMMER_FORGE_ITEM\", game.player)\nnewChat{ id=\"naming\",\n              text = (\"Do you want to name your item?\\n%s\"):tformat(tostring(chat_env.art:getTextualDesc())),\n              answers = {\n                {_t\"Yes, please.\", action=function(npc, player)\n                  local d = require(\"engine.dialogs.GetText\").new(_t\"Name your item\", _t\"Name\", 2, 40, function(txt)\n                    chat_env.art.name = txt:removeColorCodes():gsub(\"#\", \" \")\n                    game.log(\"#LIGHT_BLUE#The giant carefully hands you: %s\", chat_env.art:getName{do_color=true})\n                  end, function() game.log(\"#LIGHT_BLUE#The giant carefully hands you: %s\", chat_env.art:getName{do_color=true}) end)\n                  game:registerDialog(d)\n                end},\n                {_t\"No thanks.\", action=function() game.log(\"#LIGHT_BLUE#The giant carefully hands you: %s\", chat_env.art:getName{do_color=true}) end},\n              },\n            }\n\nreturn \"jump\" ,\"naming\""
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 2534.9999999999995,
        "pos_y": -993.1666259765624
    },
    "53": {
        "id": 53,
        "name": "entry-selector",
        "data": {
            "chatid": "enchant",
            "code": "local o = chat_env.object_base\n\nlocal art, ok\nlocal nb = 0\nlocal force_egos = {}\nif chat_env.ego then force_egos[1] = chat_env.ego end\nrepeat\n  --------------------------------------------\n  --attempt to make it happen-----------------\n  --------------------------------------------\n  art = game.state:generateRandart{base=o, lev=50, egos=3, force_themes=chat_env.force_themes, force_egos=force_egos, forbid_power_source=not_ps}\n  if art then ok = true end\n  if art and not game.state:checkPowers(player, art, nil, \"antimagic_only\") then\n    ok = false\n  end\n  nb = nb + 1\n  if nb == 40 then break end\nuntil ok\nif art and nb < 40 then\n  art:identify(true)\n  player:addObject(player.INVEN_INVEN, art)\n  player:incMoney(-2000)\n  -- clear chrono worlds and their various effects\n  game:chronoCancel(_t\"#CRIMSON#Your timetravel has no effect on pre-determined outcomes such as this.\")\n  if not config.settings.cheat then game:saveGame() end\n  chat_env.art = art\n  return \"jump\", \"pre-naming\"\nelse\n  return \"jump\", \"oups\"\nend"
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 3129,
        "pos_y": 374.25
    },
    "54": {
        "id": 54,
        "name": "entry-selector",
        "data": {
            "chatid": "ego-select",
            "code": "local o = chat_env.object_base\nlocal egos = o.egos and game.level:getEntitiesList(\"object/\"..o.egos..\":prefix\") or {}\ntable.append(egos, game.level:getEntitiesList(\"object/\"..o.egos..\":suffix\") or {})\ntable.append(egos, game.level:getEntitiesList(\"object/\"..o.egos..\":\") or {})\n\n--table of .e.name\nlocal list_egoName = {{_t\"A different item.\", jump = \"welcome\"}}\nlocal seen_egos = {}\nfor i, egotype in pairs(egos) do\n  if type(egotype) ~= \"number\" and egotype.e and egotype.e.name and seen_egos[egotype.e.name] == nil then\n    seen_egos[egotype.e.name] = true\n    print(\"[CHAT-EDITOR]\", \"|\", egotype.e.name, \"|\")\n    list_egoName[#list_egoName+1] = {egotype.e.name, action=function(npc, player)\n          chat_env.ego = egotype.e.name\n          chat_env.ego_obj = egotype.e\n          return \"ego-demo-shell\"\n        end}\n  end\nend\n\nnewChat{ id=\"ego-make\",\n\ttext = _t[[Which ego should the item have?]],\n\tanswers = list_egoName,\n}\nreturn \"jump\", \"ego-make\""
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 3226.181818181818,
        "pos_y": -406.09090909090907
    },
    "55": {
        "id": 55,
        "name": "entry-selector",
        "data": {
            "chatid": "ego-demo-shell",
            "code": "function getEgoDesc(ego)\n\tlocal function convertResolvers(e)\n\t\tif type(e) == \"table\" then\n\t\t\tfor k,v in pairs(e) do\n\t\t\t\tif v and type(v) == \"table\" and v.__resolve_last then\n\t\t\t\t\te[k] = -999\n\t\t\t\telse\n\t\t\t\t\tconvertResolvers(v)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\tego = ego:cloneFull()\n\tego.effective_ego_material_level = 5\n\tconvertResolvers(ego)\n\tego:resolve()\n\tego:resolve(nil, true)\n\tego.identified = true\n\n\tlocal desc = ego:getTextualDesc(nil, game.player)\n\n\tdesc = tostring(desc)\n\tdesc = desc:gsub(\"-999\", \"<variable>\")\n\tdesc = desc:toTString()\n\n\t-- Cleanup desc\n\tfor i, v in ipairs(desc) do\n\t\tlocal type_text = (\"Type: %s / %s\"):tformat(\"####\", \"\"):gsub(\"####.*\", \"\")\n\t\tif type(v) == \"string\" and v:find(\"^\"..type_text) then\n\t\t\tfor j = 1, i + 2 do table.remove(desc, 1) end\n\t\t\tbreak\n\t\tend\n\tend\n\tif #desc == 0 then error(\"empty desc\") end\n\n\tlocal power_str = tstring{}\n\tif ego.power_source then\n\t\tif ego.power_source.arcane then power_str:merge((_t\"Powered by #VIOLET#arcane forces#LAST#\\n\"):toTString()) end\n\t\tif ego.power_source.nature then power_str:merge((_t\"Infused by #OLIVE_DRAB#nature#LAST#\\n\"):toTString()) end\n\t\tif ego.power_source.antimagic then power_str:merge((_t\"Infused by #ORCHID#arcane disrupting forces#LAST#\\n\"):toTString()) end\n\t\tif ego.power_source.technique then power_str:merge((_t\"Crafted by #LIGHT_UMBER#a master#LAST#\\n\"):toTString()) end\n\t\tif ego.power_source.psionic then power_str:merge((_t\"Infused by #YELLOW#psionic forces#LAST#\\n\"):toTString()) end\n\t\tif ego.power_source.unknown then power_str:merge((_t\"Powered by #CRIMSON#unknown forces#LAST#\\n\"):toTString()) end\n\t\tego:triggerHook{\"Object:descPowerSource\", desc=power_str, object=ego}\n\tend\n\n\tdesc = power_str:merge(desc)\n\n\treturn desc\nend\n\nlocal ok, desc = pcall(getEgoDesc, chat_env.ego_obj)\nif not ok then desc = _t\"This ego has special values that cannot be previewed\" end\n\n\nnewChat{ id=\"ego-demo\",\n              text = (\"Use this ego? (Actual numbers will vary)\\n--------------------\\n%s\"):tformat(tostring(desc)),\n              answers = {\n                {_t\"Yes.\", jump=\"enchant\"},\n                {_t\"Something else\", jump=\"ego-select\"},\n              },\n            }\n\nreturn \"jump\" ,\"ego-demo\""
        },
        "class": "entry-selector",
        "html": "entry-selector2",
        "typenode": true,
        "inputs": {
            "input_1": {
                "connections": []
            }
        },
        "outputs": {
            "output_1": {
                "connections": []
            },
            "output_2": {
                "connections": []
            }
        },
        "pos_x": 3905.75,
        "pos_y": -191
    }
}